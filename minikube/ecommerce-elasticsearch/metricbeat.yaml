apiVersion: v1
kind: ServiceAccount
metadata:
  name: metricbeat
  namespace: production
  labels:
    k8s-app: metricbeat
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: metricbeat
  labels:
    k8s-app: metricbeat
rules:
- apiGroups: [""]
  resources:
  - nodes
  - namespaces
  - events
  - pods
  - services
  - persistentvolumes
  - persistentvolumeclaims
  verbs: ["get", "list", "watch"]
# Enable this rule only if planing to use Kubernetes keystore
#- apiGroups: [""]
#  resources:
#  - secrets
#  verbs: ["get"]
- apiGroups: ["extensions"]
  resources:
  - replicasets
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources:
  - statefulsets
  - deployments
  - replicasets
  - daemonsets
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources:
  - jobs
  - cronjobs
  verbs: ["get", "list", "watch"]
- apiGroups: ["storage.k8s.io"]
  resources:
    - storageclasses
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - nodes/stats
  verbs:
  - get
- nonResourceURLs:
  - "/metrics"
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: metricbeat
  # should be the namespace where metricbeat is running
  namespace: production
  labels:
    k8s-app: metricbeat
rules:
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs: ["get", "create", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: metricbeat-kubeadm-config
  namespace: production
  labels:
    k8s-app: metricbeat
rules:
  - apiGroups: [""]
    resources:
      - configmaps
    resourceNames:
      - kubeadm-config
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: metricbeat
subjects:
- kind: ServiceAccount
  name: metricbeat
  namespace: production
roleRef:
  kind: ClusterRole
  name: metricbeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: metricbeat
  namespace: production
subjects:
  - kind: ServiceAccount
    name: metricbeat
    namespace: production
roleRef:
  kind: Role
  name: metricbeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: metricbeat-kubeadm-config
  namespace: production
subjects:
  - kind: ServiceAccount
    name: metricbeat
    namespace: production
roleRef:
  kind: Role
  name: metricbeat-kubeadm-config
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metricbeat-daemonset-config
  namespace: production
  labels:
    k8s-app: metricbeat
data:
  metricbeat.yml: |-
    metricbeat.config:
    modules:
      path: ${path.config}/modules.d/*.yml
      # Reload module configs as they change:
      reload.enabled: false

    metricbeat.autodiscover:
      providers:
        - type: docker
          hints.enabled: true

    metricbeat.modules:
    - module: docker
      metricsets:
        - "container"
        - "cpu"
        - "diskio"
        - "healthcheck"
        - "info"
        - "memory"
        - "network"
      hosts: ["unix:///var/run/docker.sock"]
      period: 10s
      enabled: true

    - module: system
      metricsets:
        - cpu             # CPU usage
        - load            # CPU load averages
        - memory          # Memory usage
        - network         # Network IO
        - process         # Per process metrics
        - process_summary # Process summary
        - uptime          # System Uptime
        - socket_summary  # Socket summary
        - core            # Per CPU core usage
        - diskio          # Disk IO
        - filesystem      # File system usage for each mountpoint
        - fsstat          # File system summary metrics
        - socket          # Sockets and connection info (linux only)
      enabled: true
      period: 10s
      processes: ['.*']
      hostfs: "/hostfs"
      cpu.metrics:  ["percentages","normalized_percentages"]
      core.metrics: ["percentages"]

    - module: rabbitmq
      metricsets: ["node", "queue", "connection", "exchange", "shovel"]
      enabled: true
      period: 10s
      hosts: ["127.0.0.1:15672"]

    - module: mongodb
      metricsets: ["dbstats", "status", "collstats", "metrics", "replstatus"]
      period: 10s
      enabled: true
      # The hosts must be passed as MongoDB URLs in the format:
      # [mongodb://][user:pass@]host[:port].
      # The username and password can also be set using the respective configuration
      # options. The credentials in the URL take precedence over the username and
      # password configuration options.
      hosts: ["mongodb://127.0.0.1:27017"]

    - module: mysql
      metricsets:
        - status
        - performance
      period: 10s
      hosts: ["tcp(127.0.0.1:3306)/"]
      username: ecommerce
      password: api

    - module: postgresql
      enabled: true
      metricsets:
        - database
        - bgwriter
        - activity

      period: 10s
      hosts: ["postgres://127.0.0.1:5432"]
      username: ecommerce
      password: api

    processors:
      - add_cloud_metadata: ~

    # cloud.id: ${ELASTIC_CLOUD_ID}
    # cloud.auth: ${ELASTIC_CLOUD_AUTH}

    output.elasticsearch:
      hosts: ['${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}']
      username: ${ELASTICSEARCH_USERNAME}
      password: ${ELASTICSEARCH_PASSWORD}

---
# Deploy a Metricbeat instance per node for node metrics retrieval
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: metricbeat
  namespace: production
  labels:
    k8s-app: metricbeat
spec:
  selector:
    matchLabels:
      k8s-app: metricbeat
  template:
    metadata:
      labels:
        k8s-app: metricbeat
    spec:
      serviceAccountName: metricbeat
      terminationGracePeriodSeconds: 30
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: metricbeat
        image: docker.elastic.co/beats/metricbeat:8.14.1
        args: [
          "-c", "/etc/metricbeat.yml",
          "-e",
          "-system.hostfs=/hostfs",
        ]
        env:
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: ELASTICSEARCH_HOST
          valueFrom:
            secretKeyRef:
              name: ecommerce-backend-secret
              key: ecommerce-elasticsearch-host
        - name: ELASTICSEARCH_USERNAME
          valueFrom:
            secretKeyRef:
              name: ecommerce-backend-secret
              key: ecommerce-elasticsearch-username
        - name: ELASTICSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ecommerce-backend-secret
              key: ecommerce-elasticsearch-password
        # - name: ELASTIC_CLOUD_ID
        #   valueFrom:
        #     secretKeyRef:
        #       name: ecommerce-backend-secret
        #       key: ecommerce-elastic-cloud-id
        # - name: ELASTIC_CLOUD_AUTH
        #   valueFrom:
        #     secretKeyRef:
        #       name: ecommerce-backend-secret
        #       key: ecommerce-elastic-cloud-auth
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        securityContext:
          runAsUser: 0
        resources:
          limits:
            memory: 200Mi
            cpu: 100m
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: config
          mountPath: /etc/metricbeat.yml
          readOnly: true
          subPath: metricbeat.yml
        - name: data
          mountPath: /usr/share/metricbeat/data
        - name: modules
          mountPath: /usr/share/metricbeat/modules.d
          readOnly: true
        - name: proc
          mountPath: /hostfs/proc
          readOnly: true
        - name: cgroup
          mountPath: /hostfs/sys/fs/cgroup
          readOnly: true
      volumes:
      - name: proc
        hostPath:
          path: /proc
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
      - name: config
        configMap:
          defaultMode: 0640
          name: metricbeat-daemonset-config
      - name: modules
        configMap:
          defaultMode: 0640
          name: metricbeat-daemonset-modules
      - name: data
        hostPath:
          # When metricbeat runs as non-root user, this directory needs to be writable by group (g+w)
          path: /var/lib/metricbeat-data
          type: DirectoryOrCreate
---